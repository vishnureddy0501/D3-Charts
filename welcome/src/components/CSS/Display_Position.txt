position:
----------
    static:
        static position is Default position.
        The element is positioned according to the normal flow of the document.
        top, right, bottom, and left properties have no effect.
        Example:
            .static-element {
                position: static;
            }
relative:

    The element is positioned relative to its normal position.
    The top, right, bottom, and left properties will offset the element from its normal position.
    .relative-element {
        position: relative;
        top: 10px;
        left: 20px;
    }

absolute:

    The element is positioned relative to its nearest positioned ancestor (an ancestor with a position value other than static), or to the initial containing block if no such ancestor exists.
    The top, right, bottom, and left properties specify the distance from the element's containing block.
    .absolute-element {
        position: absolute;
        top: 10px;
        right: 20px;
    }

fixed:

    The element is positioned relative to the viewport, which means it stays in the same place even if the page is scrolled.
    The top, right, bottom, and left properties specify the distance from the edges of the viewport.
    Example:

    css

    .fixed-element {
        position: fixed;
        bottom: 0;
        right: 0;
    }

sticky:

    The element is treated as relative until it crosses a specified threshold, then it is treated as fixed.
    Useful for creating elements that stick to the viewport when you scroll past them.
    Requires at least one of top, right, bottom, or left to be set.
    Example:

    css

.sticky-element {
    position: sticky;
    top: 0;
}

Display:
-----------
1. flex
2. none // hide the element


The float Property: changing the position of element.
--------------------
left - The element floats to the left of its container
right - The element floats to the right of its container

// NO need to dig deep into this.